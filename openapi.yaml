openapi: 3.0.3
info:
  title: Onboarding API
  version: 1.0.11
externalDocs:
  url: http://swagger.io
servers:
  - url: https://student.swagger.io/api/v3
tags:
  - name: Student 
    description: Get,post,put and delete about StudentAPI 
paths:
  /student/{student}:        
    get:
      tags:
        - student
      summary: Get student by studentId
      description: ''
      operationId: getStudentId
      parameters:
        - name: student
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Invalid studentId supplied
        '404':
          description: Student not found
    post:
      tags:
        - student
      summary: Creates list of students with given input array
      description: Creates list of students with given input array
      operationId: createStudent
      parameters:
        - name: student
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        default:
          description: successful operation   
    put:
      tags:
        - student
      summary: Update student
      description: Updates a student.
      operationId: updateStudent
      parameters:
        - name: student
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
        '500':
          description: Internal server error     
    delete:
      tags:
        - student
      summary: Update student
      description: delete a student.
      operationId: deleteStudent
      parameters:
        - name: student
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: delete successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad request
        '500':
          description: Internal server error 
components:
  schemas:
    Student :
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: koto
        birthdate:
          type: string
          format: int64
          example: 2000-01-01
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header